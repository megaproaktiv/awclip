// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package services

import (
	"context"
	"github.com/aws/aws-sdk-go-v2/service/sts"
	"sync"
)

// Ensure, that StSInterfaceMock does implement StSInterface.
// If this is not the case, regenerate this file with moq.
var _ StSInterface = &StSInterfaceMock{}

// StSInterfaceMock is a mock implementation of StSInterface.
//
//     func TestSomethingThatUsesStSInterface(t *testing.T) {
//
//         // make and configure a mocked StSInterface
//         mockedStSInterface := &StSInterfaceMock{
//             GetCallerIdentityFunc: func(ctx context.Context, params *sts.GetCallerIdentityInput, optFns ...func(*sts.Options)) (*sts.GetCallerIdentityOutput, error) {
// 	               panic("mock out the GetCallerIdentity method")
//             },
//         }
//
//         // use mockedStSInterface in code that requires StSInterface
//         // and then make assertions.
//
//     }
type StSInterfaceMock struct {
	// GetCallerIdentityFunc mocks the GetCallerIdentity method.
	GetCallerIdentityFunc func(ctx context.Context, params *sts.GetCallerIdentityInput, optFns ...func(*sts.Options)) (*sts.GetCallerIdentityOutput, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetCallerIdentity holds details about calls to the GetCallerIdentity method.
		GetCallerIdentity []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Params is the params argument value.
			Params *sts.GetCallerIdentityInput
			// OptFns is the optFns argument value.
			OptFns []func(*sts.Options)
		}
	}
	lockGetCallerIdentity sync.RWMutex
}

// GetCallerIdentity calls GetCallerIdentityFunc.
func (mock *StSInterfaceMock) GetCallerIdentity(ctx context.Context, params *sts.GetCallerIdentityInput, optFns ...func(*sts.Options)) (*sts.GetCallerIdentityOutput, error) {
	if mock.GetCallerIdentityFunc == nil {
		panic("StSInterfaceMock.GetCallerIdentityFunc: method is nil but StSInterface.GetCallerIdentity was just called")
	}
	callInfo := struct {
		Ctx    context.Context
		Params *sts.GetCallerIdentityInput
		OptFns []func(*sts.Options)
	}{
		Ctx:    ctx,
		Params: params,
		OptFns: optFns,
	}
	mock.lockGetCallerIdentity.Lock()
	mock.calls.GetCallerIdentity = append(mock.calls.GetCallerIdentity, callInfo)
	mock.lockGetCallerIdentity.Unlock()
	return mock.GetCallerIdentityFunc(ctx, params, optFns...)
}

// GetCallerIdentityCalls gets all the calls that were made to GetCallerIdentity.
// Check the length with:
//     len(mockedStSInterface.GetCallerIdentityCalls())
func (mock *StSInterfaceMock) GetCallerIdentityCalls() []struct {
	Ctx    context.Context
	Params *sts.GetCallerIdentityInput
	OptFns []func(*sts.Options)
} {
	var calls []struct {
		Ctx    context.Context
		Params *sts.GetCallerIdentityInput
		OptFns []func(*sts.Options)
	}
	mock.lockGetCallerIdentity.RLock()
	calls = mock.calls.GetCallerIdentity
	mock.lockGetCallerIdentity.RUnlock()
	return calls
}
